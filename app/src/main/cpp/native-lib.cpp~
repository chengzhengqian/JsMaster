#include "configue.h"
#include "duktape.h"
#include <jni.h>
#include <string>
static JNIEnv *currentEnv;
static duk_context *ctx;

static duk_ret_t native_print(duk_context *ctx) {
  duk_push_string(ctx, " ");
  duk_insert(ctx, 0);
  duk_join(ctx, duk_get_top(ctx) - 1);
  const char *c = duk_safe_to_string(ctx, -1);
  jclass cls = currentEnv->FindClass(GLOBALSTATE);
  jmethodID printLog = currentEnv->GetStaticMethodID(cls, JSPRINT, JSPRINTTYPE);
  currentEnv->CallStaticVoidMethod(cls, printLog, currentEnv->NewStringUTF(c));
  return 0;
}

static duk_ret_t eval_raw(duk_context *ctx, void *udata) {
  (void)udata;
  duk_eval(ctx);
  return 1;
}

static duk_ret_t tostring_raw(duk_context *ctx, void *udata) {
  (void)udata;
  duk_to_string(ctx, -1);
  return 1;
}

const char *runString(const char *input) {
  const char *res;
  duk_push_string(ctx, input);
  duk_safe_call(ctx, eval_raw, NULL, 1 /*nargs*/, 1 /*nrets*/);
  duk_safe_call(ctx, tostring_raw, NULL, 1 /*nargs*/, 1 /*nrets*/);
  res = duk_get_string(ctx, -1);
  duk_pop(ctx);

  return res;
}

const char *getJavaString(jstring s, JNIEnv *env) {
  return env->GetStringUTFChars(s, 0);
}
void releaseJavaString(const char *c, jstring s, JNIEnv *env) {
  env->ReleaseStringUTFChars(s, c);
}
extern "C" JNIEXPORT jstring JNICALL
Java_com_serendipity_chengzhengqian_jsmaster_JsEngine_runJavaScript(JNIEnv *env,
                                                                    jobject obj,
                                                                    jstring s) {
  currentEnv = env;
  const char *c = getJavaString(s, env);
  jstring result = env->NewStringUTF(runString(code));

  return result;
}

extern "C" JNIEXPORT void JNICALL
Java_com_serendipity_chengzhengqian_jsmaster_JsEngine_create(JNIEnv *env,
                                                             jobject obj) {
  ctx = duk_create_heap_default();
  duk_push_c_function(ctx, native_print, DUK_VARARGS);
  duk_put_global_string(ctx, "print");
}

extern "C" JNIEXPORT void JNICALL
Java_com_serendipity_chengzhengqian_jsmaster_JsEngine_destroy(JNIEnv *env,
                                                              jobject obj) {
  duk_destroy_heap(ctx);
}
